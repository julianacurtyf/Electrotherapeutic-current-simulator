# Generated by Django 4.0.2 on 2022-03-01 17:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aussie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('burst_hz', models.FloatField()),
                ('burst_ms', models.FloatField()),
                ('rise', models.FloatField()),
                ('on', models.FloatField()),
                ('decay', models.FloatField()),
                ('off', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CPAV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('polo', models.CharField(choices=[('P+', 'Positivo'), ('P-', 'Negativo'), ('A', 'Alternado')], max_length=2)),
                ('rise', models.FloatField()),
                ('on', models.FloatField()),
                ('decay', models.FloatField()),
                ('off', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FES',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('fase', models.FloatField()),
                ('rise', models.FloatField()),
                ('on', models.FloatField()),
                ('decay', models.FloatField()),
                ('off', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IBP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('AMF', models.FloatField()),
                ('sweep_hz', models.FloatField()),
                ('sweep_s', models.IntegerField(choices=[(1, 'Mode1'), (2, 'Mode2'), (3, 'Mode3')])),
                ('rise', models.FloatField()),
                ('on', models.FloatField()),
                ('decay', models.FloatField()),
                ('off', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ITP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('AMF', models.FloatField()),
                ('sweep_hz', models.FloatField()),
                ('sweep_s', models.IntegerField(choices=[(1, 'Mode1'), (2, 'Mode2'), (3, 'Mode3')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Microcorrente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('polo', models.CharField(choices=[('P+', 'Positivo'), ('P-', 'Negativo'), ('A', 'Alternado')], max_length=2)),
                ('frequency', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Polarizada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('polo', models.CharField(choices=[('P+', 'Positivo'), ('P-', 'Negativo'), ('A', 'Alternado')], max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Russa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('burst_hz', models.FloatField()),
                ('rise', models.FloatField()),
                ('on', models.FloatField()),
                ('decay', models.FloatField()),
                ('off', models.FloatField()),
                ('duty', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TENS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensity', models.FloatField()),
                ('carrier', models.FloatField()),
                ('timer', models.FloatField()),
                ('mode', models.CharField(choices=[('C', 'Continuous'), ('B', 'Burst modulation'), ('VIF', 'Automatic variation of intensity and frequency')], max_length=3)),
                ('fase', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
